{"pageProps":{"note":{"title":"Pure Functions","content":"## What Are They\r\n\r\nA \"pure\" function is one that, given perdicatable inputs will produce perdictable outputs with no side effects. For example:\r\n\r\n## Examples\r\n\r\n```js\r\nfunction add(firstNumber, secondNumber) {\r\n\treturn firstNumber + secondNumber;\r\n}\r\n```\r\n\r\nThis function adds two numbers, and does nothing out side of its closure. It is pure. It has no side effects. It is very predictable. I can test it like this:\r\n\r\n```js\r\nit(\"Sums\", () => expect(add(1, 2).toBe(3)));\r\n```\r\n\r\n### Side Effects\r\n\r\nThis function, adds two numbers and then uses jQuery to set the inner HTML of an element to the sum of the two numbers:\r\n\r\n```js\r\nfunction addAndDisplay(firstNumber, secondNumber) {\r\n\tconst sum = firstNumber + secondNumber;\r\n\tjQuery(\"#sum\").html(sum);\r\n}\r\n```\r\n\r\nThis function is NOT pure, beacuse it has a side effect.\r\n\r\nThe DOM modification is a side effect, it happens outside of the scope of this closure and effects other things. This would be less straight forward to test, do to the side effects.\r\n\r\n## In React\r\n\r\nIn React, a functional component can be pure. This funciton, given the same \"title\" property will allways result in the same object:\r\n\r\n```jsx\r\nconst ShowTitle({title}) => (\r\n    <div>{title}</div>\r\n);\r\n```\r\n\r\nOn the other hand, if we have to fetch the title from a remote API, that's a side effect. React has a \"useEffect\" hook for this:\r\n\r\n```jsx\r\nconst ShowTitle({postId}) => {\r\n    const [title,setTitle] = React.useState();\r\n    React.useEffect(() => {\r\n        fetch( `api/posts/${postId}`)\r\n        .then(r => r.json())\r\n        .then(r => setTitle(r.title))\r\n    },\r\n    //Rerun fetch when postId changes\r\n    [postId]);\r\n    if( title ){\r\n        return (\r\n            <div>{title}</div>\r\n        )\r\n    }\r\n    return (<div>Loading</div>);\r\n};\r\n```\r\n\r\nNow that the side effect is in a hook, we have more control over when the effect runs and can more easily mock it.\r\n\r\n## WordPress\r\n\r\nWordPress has very weak encapsulation. For example, consider this:\r\n\r\n```php\r\nfunction saveNewItem($title){\r\n    wp_insert_post(['post_title'=> $title]);\r\n}\r\n```\r\n\r\nThis looks simple, but wp_insert_post has filters in it which can change the functions behaviour. In addition, a MySQL database is involved.\r\n","slug":"patterns-pure-functions","references":[]},"slug":"patterns-pure-functions"},"__N_SSG":true}
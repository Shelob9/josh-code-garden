{"pageProps":{"note":{"title":"Micro CSS Frameworks","content":"- [Marx](https://mblode.github.io/marx/)\r\n  - No classes!\r\n- [Wing](https://kbrsh.github.io/wing/)\r\n  - Super minimal, also black/whiteish\r\n- [Chota](https://jenil.github.io/chota)\r\n  - Very minimal\r\n- [Milligram](https://milligram.io/)\r\n- [water.css](https://watercss.kognise.dev/)\r\n\r\n### Wing Components\r\n\r\n[[react]] components for wing.css\r\n\r\n```tsx\r\nimport { createElement } from \"react\";\r\nimport Link from \"next/link\";\r\nexport const Box: React.FC<{\r\n\tas?: string;\r\n\tclassName?: string;\r\n\tchildren: any;\r\n}> = ({ as, children, className }) => {\r\n\treturn createElement(as ? as : \"div\", { className }, children);\r\n};\r\n\r\nexport const Button: React.FC<{\r\n\toutline?: boolean;\r\n\tonClick?: () => void;\r\n\tchildren: any;\r\n}> = ({ outline, children, onClick }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={outline ? \"outline\" : \"\"}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tif (onClick) {\r\n\t\t\t\t\tonClick();\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport const Heading: React.FC<{\r\n\tlevel?: number;\r\n\tchildren: any;\r\n\tclassName?: string;\r\n}> = ({ level, children, className }) => {\r\n\treturn createElement(`h${level ? level : 2}`, { className }, children);\r\n};\r\nexport const NavLink: React.FC<{ children: any; href: string }> = ({\r\n\tchildren,\r\n\thref,\r\n}) => {\r\n\treturn (\r\n\t\t<A className={\"nav-item\"} href={href}>\r\n\t\t\t{children}\r\n\t\t</A>\r\n\t);\r\n};\r\n\r\nexport const A: React.FC<{\r\n\tchildren: any;\r\n\thref: string;\r\n\tclassName?: string;\r\n}> = ({ children, href, className }) => {\r\n\tif (href.startsWith(\"http\")) {\r\n\t\treturn (\r\n\t\t\t<a className={className} href={href}>\r\n\t\t\t\t{children}\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<Link href={href}>\r\n\t\t\t<a className={className}>{children}</a>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport const Navigation: React.FC<{\r\n\titems: { href: string; label: string }[];\r\n\ttitle: string;\r\n}> = ({ items, title }) => {\r\n\treturn (\r\n\t\t<Box className=\"nav\">\r\n\t\t\t<h2 className=\"nav-logo\">\r\n\t\t\t\t<NavLink href={\"/\"}>{title}</NavLink>\r\n\t\t\t</h2>\r\n\t\t\t{items.map((item) => (\r\n\t\t\t\t<NavLink key={item.href} href={item.href}>\r\n\t\t\t\t\t{item.label}\r\n\t\t\t\t</NavLink>\r\n\t\t\t))}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport const Divider = () => {\r\n\treturn <hr />;\r\n};\r\n\r\nexport const Section = (props) => (\r\n\t<Box as={\"section\"} {...props}>\r\n\t\t{props.children}\r\n\t</Box>\r\n);\r\n\r\nexport const Input = (props) => {\r\n\treturn <input {...props} />;\r\n};\r\nexport const Label = (props) => (\r\n\t<Box as={\"label\"} {...props}>\r\n\t\t{props.children}\r\n\t</Box>\r\n);\r\n\r\nexport const Grid = ({ children }) => (\r\n\t<Box as={\"div\"} className={\"row\"}>\r\n\t\t{children}\r\n\t</Box>\r\n);\r\n\r\nexport const Column = ({ children }) => (\r\n\t<Box as={\"div\"} className={\"col\"}>\r\n\t\t{children}\r\n\t</Box>\r\n);\r\n\r\nexport const CardWrapper = ({ children }) => {\r\n\treturn <Box className=\"cards\">{children}</Box>;\r\n};\r\n\r\nexport const Card: React.FC<{\r\n\tcontent: string;\r\n\ttitle: string;\r\n\tfooter: any;\r\n}> = ({ content, title, footer }) => {\r\n\treturn (\r\n\t\t<Box className=\"card\">\r\n\t\t\t<h5 className=\"card-header\">{title}</h5>\r\n\t\t\t<p className=\"card-body\">{content}</p>\r\n\t\t\t<Box className=\"card-footer center text-center\">{footer}</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n```\r\n\r\n","slug":"micro-css","references":[{"slug":"react","url":"/notes/react"}]},"slug":"micro-css"},"__N_SSG":true}
{"pageProps":{"note":{"title":"Github Actions For Laravel","content":"- [[gh-actions]]\r\n- [[Laravel]]\r\n\r\n## Running Laravel Tests With Github Actions\r\n\r\n```yml\r\nname: Tests\r\n\r\non: push\r\n\r\njobs:\r\n  laravel-tests:\r\n    runs-on: ubuntu-latest\r\n\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n      - name: Copy .env\r\n        run: php -r \"file_exists('.env') || copy('.env.example', '.env');\"\r\n      - name: Install Dependencies\r\n        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist\r\n      - name: Generate key\r\n        run: php artisan key:generate\r\n      - name: Directory Permissions\r\n        run: chmod -R 777 storage bootstrap/cache\r\n      - name: Create Database\r\n        run: |\r\n          mkdir -p database\r\n          touch database/database.sqlite\r\n      - name: Migrate Database\r\n        env:\r\n          DB_CONNECTION: sqlite\r\n          DB_DATABASE: database/database.sqlite\r\n        run: php artisan migrate\r\n      - name: Execute tests (Unit and Feature tests) via PHPUnit\r\n        env:\r\n          DB_CONNECTION: sqlite\r\n          DB_DATABASE: database/database.sqlite\r\n          ## Must be set as a secret in github repo\r\n          SOME_SECRET: ${{ secrets.SOME_SECRET }}\r\n        run: vendor/bin/phpunit\r\n```\r\n\r\n## Deploy Laravel Vapor Application Using Github Actions\r\n\r\nGithub actions can be used to automate deployments when using Vapor. I am using two jobs, one for production and one for a \"develop\" environment.\r\n\r\nThis is the job that I use to deploy the \"develop\" branch on Github to the \"develp\" Vapor environment on AWS, whenever I push to that branch:\r\n\r\n```yml\r\n# On push to develop branch, deploy to staging\r\n\r\nname: Staging Deployment\r\n\r\non:\r\n  push:\r\n    branches: [develop]\r\n\r\njobs:\r\n  vapor:\r\n    name: Check out and deploy using Vapor\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v1\r\n      - name: Login to Github Package Registry\r\n        run: echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin\r\n      - name: Deploy to Staging\r\n        run: |\r\n          docker run \\\r\n            --env VAPOR_API_TOKEN=${{ secrets.VAPOR_API_TOKEN }} \\\r\n            --volume $(pwd):/app \\\r\n            docker.pkg.github.com/ubient/laravel-vapor-action/laravel-vapor-action:latest \\\r\n            deploy develop\r\n```\r\n\r\nThis job is used to deploy to production, whenever I push to master:\r\n\r\n```yml\r\n# On push to master, deploy to production\r\n\r\nname: Deployment\r\n\r\non:\r\n  push:\r\n    branches: [master]\r\n\r\njobs:\r\n  vapor:\r\n    name: Check out and deploy using Vapor\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v1\r\n      - name: Login to Github Package Registry\r\n        run: echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin\r\n      - name: Deploy to Production\r\n        run: |\r\n          docker run \\\r\n            --env VAPOR_API_TOKEN=${{ secrets.VAPOR_API_TOKEN }} \\\r\n            --volume $(pwd):/app \\\r\n            docker.pkg.github.com/ubient/laravel-vapor-action/laravel-vapor-action:latest \\\r\n            deploy production\r\n```\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[gh-actions]: gh-actions \"Github Actions\"\r\n[Laravel]: laravel \"Laravel\"\r\n[//end]: # \"Autogenerated link references\"\r\n","slug":"gh-actions-laravel","references":[{"slug":"gh-actions","url":"/notes/gh-actions"}]},"slug":"gh-actions-laravel"},"__N_SSG":true}
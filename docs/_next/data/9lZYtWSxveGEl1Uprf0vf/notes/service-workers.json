{"pageProps":{"note":{"content":"--- \ntitle: Service Workers\nslug: service-workers\n---\n\n- [web.dev](https://developers.google.com/web/fundamentals/primers/service-workers)\n- [mdn](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers)\n\n## Register Service Workers\n\n```js\nif {\n\tundefined !== window &&\n\t\twindow.navigator.serviceWorker\n\t\t\t.register(\"./sw.js\", { scope: \".\" })\n\t\t\t.then((reg) => {\n\t\t\t\t// registration worked\n\t\t\t\tconsole.log(\"Registration succeeded. Scope is \" + reg.scope);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// registration failed\n\t\t\t\tconsole.log(\"Registration failed with \" + error);\n\t\t\t});\n}\n```\n\n## Log requests with service worker\n\n```js\nself.addEventListener(\"install\", function (event) {\n\tconsole.log(\"Sevice worker installed\");\n});\n\nself.addEventListener(\"fetch\", (event) => {\n\tconsole.log(event.request.method, event.request.url);\n\tevent.respondWith(fetch(event.request));\n});\n```\n\n## Proxy Specific Requests With Service Workers\n\n```js\nself.addEventListener(\"fetch\", (event) => {\nconst { url, method } = event.request;\n//Does the URL match? But only for get\nif (url.includes(\"/api/whatever\") && 'GET' === method ) {\nevent.respondWith(\nnew Response(\n//JSON encoded object\n//Could be string,blob,redirect,etc\nJSON.stringify({\nhi: 'Roy'\n}),\n{\n//Set additional headers\nheaders: {\n//Send JSON content type headers\n\"Content-Type\": \"text/json\"\n},\n}\n)\n);\n} else {\n//No match? Send to network\nevent.respondWith(fetch(event.request));\n}\n});\n```\n","slug":"service-workers","references":[]},"slug":"service-workers"},"__N_SSG":true}
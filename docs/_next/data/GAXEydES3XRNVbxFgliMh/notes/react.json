{"pageProps":{"note":{"title":"React","content":"## Portals\r\n\r\nRender outside of the root element.\r\n\r\n```jsx\r\nconst RenderPortal = ({domNode,children}){\r\n    if( ! domNode ){\r\n        return null\r\n    }\r\n    return ReactDOM.createPortal(\r\n        this.props.children,\r\n        domNode\r\n    );\r\n}\r\n\r\n```\r\n\r\n## Testing React With React Testing Library\r\n\r\n- https://testing-library.com/docs/react-testing-library/\r\n- https://github.com/testing-library/testing-library-docs/pull/138\r\n- https://codesandbox.io/s/github/kentcdodds/react-testing-library-examples\r\n- https://testing-library.com/docs/react-testing-library/cheatsheet\r\n\r\nI use React Testing Library. React Testing Library is different in it's approach then any other testing library. The idea is test like someone using an app.\r\n\r\nExample Component:\r\n\r\n```jsx\r\nconst FormInput = ({onChange,value}) => {\r\n\r\n    return (\r\n        <div>\r\n            <label\r\n                htmlFor={'the-input'}\r\n            >\r\n            Roy\r\n            </label>\r\n            <input\r\n                id={'the-input}\r\n                onChange={(e) => onChange(e.target.value)\r\n                }>\r\n        </div>\r\n    )\r\n}\r\n```\r\n\r\n### Test Change Event Calls Callback Function With React Testing Library\r\n\r\n```jsx\r\nimport { render, fireEvent } from \"@testing-library/react\";\r\nconst changeHandler = jest.fn();\r\nconst { getByLabel } = render(<FormInput onChange={changeHandler} />);\r\nfireEvent(getByLabel(\"Roy\"), { event: { target: \"mike\" } });\r\nexpect(changeHandler).toBeCalledTimes(1);\r\nexpect(changeHandler).toBeCalledWith(\"mike\");\r\n```\r\n\r\n### Snapshot React Componet With React Testing Library\r\n\r\n- https://jestjs.io/docs/en/snapshot-testing\r\n\r\n```jsx\r\nimport { render } from \"@testing-library/react\";\r\nit(\"matches Snapshot\", () => {\r\n  const { container } = render(<FormInput onChange={jest.fn()} />);\r\n  expect(container).toMatchSnapshot();\r\n});\r\n```\r\n","slug":"react","references":[]},"slug":"react"},"__N_SSG":true}